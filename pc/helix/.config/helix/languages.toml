use-grammars = { except = [ "hare", "wren", "gemini" ] }

[language-server.rust-analyzer]
command = "rust-analyzer"

[language-server.solargraph]
config.diagnostics=true
config.formatting=true

[[language]]
name = "rust"
scope = "source.rust"
injection-regex = "rs|rust"
file-types = ["rs"]
roots = ["Cargo.toml", "Cargo.lock"]
shebangs = ["rust-script", "cargo"]
auto-format = true
comment-tokens = ["//", "///", "//!"]
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
  { start = "/*!", end = "*/" },
]
language-servers = [ "rust-analyzer" ]
indent = { tab-width = 4, unit = "    " }
persistent-diagnostic-sources = ["rustc", "clippy"]

[[grammar]]
name = "rust"
source = { git = "https://github.com/tree-sitter/tree-sitter-rust", rev = "9c84af007b0f144954adb26b3f336495cbb320a7" }

[[language]]
name = "ruby"
scope = "source.ruby"
injection-regex = "ruby"
file-types = [
  "rb",
  "rake",
  "irb",
  "gemspec",
  "rabl",
  "jbuilder",
  "jb",
  "podspec",
  "rjs",
  "rbi",
  "rbs",
  { glob = "rakefile" },
  { glob = "gemfile" },
  { glob = "Rakefile" },
  { glob = "Gemfile" },
  { glob = "Podfile" },
  { glob = "Vagrantfile" },
  { glob = "Brewfile" },
  { glob = "Guardfile" },
  { glob = "Capfile" },
  { glob = "Cheffile" },
  { glob = "Hobofile" },
  { glob = "Appraisals" },
  { glob = "Rantfile" },
  { glob = "Berksfile" },
  { glob = "Berksfile.lock" },
  { glob = "Thorfile" },
  { glob = "Puppetfile" },
  { glob = "Fastfile" },
  { glob = "Appfile" },
  { glob = "Deliverfile" },
  { glob = "Matchfile" },
  { glob = "Scanfile" },
  { glob = "Snapfile" },
  { glob = "Gymfile" },
]
shebangs = ["ruby"]
comment-token = "#"
language-servers = [ "solargraph" ]
indent = { tab-width = 2, unit = "  " }
formatter = { command = "rubocop", args = ["--stdin", "foo.rb", "-a", "--stderr", "--fail-level", "fatal"] }
auto-format = true

[[grammar]]
name = "ruby"
source = { git = "https://github.com/tree-sitter/tree-sitter-ruby", rev = "206c7077164372c596ffa8eaadb9435c28941364" }

[[language]]
name = "markdown"
language-servers = ["ltex"]
soft-wrap.enable = true

[language-server.ltex]
command = "env"
args = [
  "JAVA_TOOL_OPTIONS=-Djdk.xml.totalEntitySizeLimit=0",
  "ltex-ls"
]
